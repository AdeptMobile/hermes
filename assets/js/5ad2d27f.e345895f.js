(self.webpackChunkhermes_website=self.webpackChunkhermes_website||[]).push([[242],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},344:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c},default:function(){return s}});var n=r(4034),i=r(9973),o=(r(7294),r(3905)),a={id:"regexp",title:"RegExp"},p={unversionedId:"regexp",id:"regexp",isDocsHomePage:!1,title:"RegExp",description:"RegExp",source:"@site/../doc/RegExp.md",sourceDirName:".",slug:"/regexp",permalink:"/docs/regexp",editUrl:"https://github.com/facebook/hermes/blob/HEAD/website/../doc/RegExp.md",version:"current",lastUpdatedAt:1607758573,formattedLastUpdatedAt:"12/11/2020",frontMatter:{id:"regexp",title:"RegExp"},sidebar:"docs",previous:{title:"Strings",permalink:"/docs/strings"},next:{title:"React Native Integration",permalink:"/docs/react-native-integration"}},c=[{value:"RegExp",id:"regexp",children:[]},{value:"Supported Syntax",id:"supported-syntax",children:[]}],l={toc:c};function s(e){var t=e.components,r=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"regexp"},"RegExp"),(0,o.kt)("p",null,"The Hermes regexp engine is a traditional engine using a backtracking stack. It compiles a regexp into bytecode which can be executed efficiently. For regexp literals like ",(0,o.kt)("inlineCode",{parentName:"p"},"/abc/"),", this occurs at compile time: the regexp bytecode is embedded into the Hermes bytecode file. Note regexp bytecode is distinct from Hermes bytescode."),(0,o.kt)("p",null,"The regexp engine proceeds as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Parse phase.")," The regexp parser emits a tree of nodes, effectively an IR."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Optimization phase.")," The node tree is traversed and optimized in various ways."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Emitting phase.")," The node tree is traversed and emits regexp bytecode."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Execution phase.")," The bytecode is executed against an input string.")),(0,o.kt)("h2",{id:"supported-syntax"},"Supported Syntax"),(0,o.kt)("p",null,"As of this writing, Hermes regexp supports"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"All of ES6, including global, case-insensitive, multiline, sticky, and Unicode (and legacy)."),(0,o.kt)("li",{parentName:"ol"},"ES9 lookbehinds.")),(0,o.kt)("p",null,"Missing features from ES9 include:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Named capture groups."),(0,o.kt)("li",{parentName:"ol"},"Unicode property escapes.")))}s.isMDXComponent=!0}}]);